{"version":3,"sources":["components/Timer/Timer.js","components/Header/header.js","components/container/container.js","components/Button/Button.js","components/AnswerContainer/AnswerContainer.js","components/QuizGame/QuizGame.js","App.js","index.js"],"names":["intervalId","Header","className","Container","props","style","height","children","Button","onClick","class","message","styles","borderRadius","padding","cursor","fontSize","marginBottom","background","AnswerContainer","answers","map","answer","Timer","state","seconds","run","clearInterval","setInterval","decrement","setState","stop","setTimeout","changeQuestion","this","React","Component","QuizGame","questions","start","count","quizEnd","correctAnswers","incorrectAnswers","statement","color","handleStartClick","arr","forEach","question","push","correctAnswer","handleClickedAnswer","correctAnswersArray","includes","length","handleClickReset","marginLeft","fontWeight","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a098c32.chunk.js","sourcesContent":["import React from 'react';\n\nlet intervalId;\n\nclass Timer extends React.Component {\n    state = {\n        seconds: 10,\n    }\n\n    componentDidMount() {\n        this.run()\n    }\n\n    run = () => {\n        clearInterval(intervalId)\n        intervalId = setInterval(this.decrement, 1000)\n    }\n\n    decrement = () => {\n        this.setState({seconds: this.state.seconds - 1})\n        if (this.state.seconds === 0) {\n            this.stop()\n            setTimeout(() => {\n                this.setState({\n                    seconds: 10\n                })\n            }, 1000)\n        \n            this.props.changeQuestion(this.state.seconds)\n            this.run()\n        }\n    }\n\n    stop = () => {\n        clearInterval(intervalId);\n    }\n\n    render() {\n        return (\n            <p style={{fontSize: 35}}>{this.state.seconds}</p>\n        )\n    }\n}\n\nexport default Timer;","import React from 'react';\nimport './header.css';\n\nconst Header = () => {\n    return (\n        <div className='header'>\n            <h1 className='header-title'>Mineral Trivia Game</h1>\n            <ul className='header-list'>\n                <li className='github'>\n                    <p>Andrew Stiles: </p>\n                    <p>Github</p>\n                </li>\n                <li className='linkedin'>\n                    <p>Tim Stiles: </p>\n                    <p>LinkedIn</p>\n                </li>\n            </ul> \n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './container.css';\n\nconst Container = props => {\n    return <div style={{height: `${props.height}`}} className=\"container\">{props.children}</div>\n}\n\nexport default Container;","import React from 'react';\nimport './Button.css';\n\nconst Button = props => {\n    return (\n        <button onClick={props.onClick} class='btn'>{props.message}</button>\n    )\n}\n\nexport default Button;","import React from 'react';\nimport './AnswerContainer.css';\n\nconst styles = {\n    borderRadius: 20,\n    padding: 15,\n    cursor: 'pointer',\n    fontSize: 16,\n    marginBottom: 10,\n    '&:hover': {\n        background: 'blue',\n    }\n}\n\nconst AnswerContainer = props => {\n    //put answer into onclick function to retrieve the answer the user clicked\n    const answers = props.answers.map(answer => {\n        return <button style={styles} onClick={() => props.onClick(answer)}>{answer}</button>\n    })\n    return (\n        <div className='answer-list'>\n            {answers}\n        </div>\n    )\n}\n\nexport default AnswerContainer;\n","import React from 'react';\nimport questions from '../../Questions.json';\nimport Button from '../Button/Button';\nimport AnswerContainer from '../AnswerContainer/AnswerContainer';\nimport Timer from '../Timer/Timer';\nimport './QuizGame.css';\n\nclass QuizGame extends React.Component {\n\n    state = {\n        questions,\n        message: 'Start Quiz',\n        start: false,\n        count: 0,\n        quizEnd: false,\n        correctAnswers: 0,\n        incorrectAnswers: 0,\n        statement: '',\n        color: ''\n    }\n\n    handleStartClick = () => {\n        this.setState({\n           start: true \n        })\n    }\n\n    correctAnswers = () => {\n        const arr = []\n        this.state.questions.forEach(question => {\n            arr.push(question.correctAnswer)\n        })\n        return arr\n    }\n\n    handleClickedAnswer = answer => {\n        const correctAnswersArray = this.correctAnswers()\n        if (correctAnswersArray.includes(answer)) {\n            this.setState({\n                correctAnswers: this.state.correctAnswers + 1,\n                statement: 'Correct!!',\n                color: 'green'\n            })\n        }\n        if (!correctAnswersArray.includes(answer)) {\n            this.setState({\n                incorrectAnswers: this.state.incorrectAnswers + 1,\n                statement: 'Wrong!!',\n                color: 'red'\n            })\n        }\n        if (this.state.count === this.state.questions.length - 1) {\n            this.setState({\n                start: false,\n                quizEnd: true\n            })\n        }\n        setTimeout(() => {\n            this.setState({count: this.state.count + 1, statement: ''})\n        }, 1000)\n    }\n\n    changeQuestion = seconds => {\n\n        setTimeout(() => {\n            this.setState({\n                count: this.state.count + 1,\n            })\n        }, 1000)\n\n        if (seconds === 10) {\n            this.setState({\n                incorrectAnswers: this.state.incorrectAnswers + 1,\n                statement: \"Time's Up\",\n                color: 'red'\n            })\n        }\n        \n        if (this.state.count === this.state.questions.length) {\n            this.setState({\n                start: false,\n                quizEnd: true\n            })\n        }\n    }\n\n    handleClickReset = () => {\n        this.setState({\n            start: true,\n            count: 0,\n            quizEnd: false,\n            correctAnswers: 0,\n            incorrectAnswers: 0,\n            statement: ''\n        })\n    }\n\n    render() {\n        return (\n            <div class='game-section'>\n                {(!this.state.start && !this.state.quizEnd) &&\n                    <div class='game-initial-container'>\n                        <p style={{fontSize: 25, marginLeft: 20}}><strong>Test Your knowledge of Rocks and Minerals with this quiz, you will have ten seconds to answer each question.</strong></p>\n                        <Button\n                            message={this.state.message}\n                            onClick={this.handleStartClick}\n                        />\n                    </div>\n                }\n                {(this.state.start && !this.state.quizEnd) &&\n                    <div class='game-start-container'>\n                        <p style={{marginBottom: 10, fontSize: 25, color: `${this.state.color}`, fontWeight: 'bold'}}>{this.state.statement}</p>\n                        <p style={{fontWeight: 'bold', marginBottom: 18, fontSize: 20}}>{this.state.questions[this.state.count].question}</p>\n                        <Timer \n                            changeQuestion={this.changeQuestion}\n                        />\n                        <AnswerContainer\n                            answers={this.state.questions[this.state.count].answers}\n                            color={this.state.color}\n                            onClick={this.handleClickedAnswer}\n                        />\n                    </div>\n                }\n                {(this.state.quizEnd && !this.state.start) &&\n                    <div class='game-end-container'>\n                        <h2>Results</h2>\n                        <p style={{fontWeight: 'bold'}}>Correct Answers: {this.state.correctAnswers}</p>\n                        <p style={{fontWeight: 'bold'}}>Incorrect Answers: {this.state.incorrectAnswers}</p>\n                        <button onClick={this.handleClickReset} class='reset-btn'>Try Again?</button>\n                    </div> \n                }\n            </div>\n        )\n    }\n\n}\n\nexport default QuizGame;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/header';\nimport Container from './components/container/container';\nimport QuizGame from './components/QuizGame/QuizGame';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Container>\n        <QuizGame />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}